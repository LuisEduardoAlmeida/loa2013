unit recUno;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Buttons, CheckLst, ComCtrls, DB, ADODB,
  DBTables, Grids, DBGrids;

type
  TfrmRecUno = class(TForm)
    Shape1: TShape;
    Shape2: TShape;
    Label1: TLabel;
    Shape3: TShape;
    SpeedButton1: TSpeedButton;
    Shape4: TShape;
    txtConsulta: TEdit;
    Label3: TLabel;
    Label4: TLabel;
    txtCodigoConsulta: TEdit;
    Bevel1: TBevel;
    Shape5: TShape;
    btnSave: TSpeedButton;
    btnDelete: TSpeedButton;
    btnCancel: TSpeedButton;
    btnPrint: TSpeedButton;
    Bevel2: TBevel;
    DBGrid: TDBGrid;
    qry: TADOQuery;
    sQry: TDataSource;
    chbAll: TCheckBox;
    btnRefresh: TSpeedButton;
    stp: TADOStoredProc;
    chbAlfa: TCheckBox;
    Bevel3: TBevel;
    qryRecUno: TADOQuery;
    sQryRecUno: TDataSource;
    DBGrid1: TDBGrid;
    qryRecUnounorc: TStringField;
    qryRecUnoesfera: TStringField;
    qryRecUnoelReceita: TStringField;
    qryRecUnoindUso: TStringField;
    qryRecUnofonte: TStringField;
    qryRecUnovalor: TBCDField;
    elReceita: TADOQuery;
    qryRecUnoelReceitaD: TStringField;
    qryFonte: TADOQuery;
    procedure SpeedButton1Click(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure clearControls();
    procedure txtCodigoConsultaExit(Sender: TObject);
    procedure btnRefreshClick(Sender: TObject);
    procedure txtConsultaExit(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure btnCancelClick(Sender: TObject);
    procedure btnDeleteClick(Sender: TObject);
    procedure btnPrintClick(Sender: TObject);
    procedure qryRecUnoBeforePost(DataSet: TDataSet);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmRecUno: TfrmRecUno;

implementation

uses data, acaoList, recUnoList, recUnoListAlfa;

{$R *.dfm}

procedure TfrmRecUno.SpeedButton1Click(Sender: TObject);
begin
   if qryRecUno.State in [dsInsert, dsEdit] then
     if application.messageBox('Você iniciou uma edição no registro atual. Deseja salvar as alterações ?','',MB_ICONQUESTION+MB_YESNO) = IDYES then qryRecUno.post
     else  close;
end;

procedure TfrmRecUno.FormActivate(Sender: TObject);
begin
  btnRefreshClick(nil);
  clearControls();
  dbGrid.setFocus;
end;

procedure TfrmRecUno.clearControls;
begin
  txtCodigoConsulta.text := '';
  txtConsulta.text := '';
end;

procedure TfrmRecUno.txtCodigoConsultaExit(Sender: TObject);
begin
  if trim(txtCodigoConsulta.text) = '' then exit;
  if not qry.Locate('codigo',txtCodigoConsulta.text,[]) then begin
     showMessage('Código da Unidade Orçamentária Inválido');
     txtCodigoConsulta.setFocus;
     exit;
  end;
end;

procedure TfrmRecUno.btnRefreshClick(Sender: TObject);
begin
  with qry, qry.SQL do begin
    close;
    clear;
    add('SELECT * FROM unorc ORDER BY descricao');
    open;
  end;
end;

procedure TfrmRecUno.txtConsultaExit(Sender: TObject);
begin
  if trim(txtConsulta.text) = '' then exit;
  with qry, qry.SQL do begin
    close;
    clear;
    if chbAll.checked then
       add('SELECT * FROM unorc WHERE descricao LIKE(''%'+txtConsulta.text+'%'')')
    else add('SELECT * FROM unorc WHERE descricao LIKE('''+txtConsulta.text+'%'')');
    open;
    if qry.eof then begin
       showMessage('Consulta Inválida');
       exit;
    end;
  end;
end;

procedure TfrmRecUno.btnSaveClick(Sender: TObject);
begin
  if qryRecUno.state in [dsInsert, dsEdit] then qryRecUno.post;
end;

procedure TfrmRecUno.btnCancelClick(Sender: TObject);
begin
  qryRecUno.cancel;
end;

procedure TfrmRecUno.btnDeleteClick(Sender: TObject);
begin
  if application.messageBox('Você tem certeza que deseja excluir o registro corrente?','Confirmação de Exclusão',MB_ICONQUESTION+MB_YESNO) = IDNO then exit
  else qryRecUno.delete;
end;

procedure TfrmRecUno.btnPrintClick(Sender: TObject);
begin
  if chbAlfa.checked then begin
     Application.CreateForm(TfrmRecUnoListAlfa, frmRecUnoListAlfa);
     frmRecUnoListAlfa.report.preview;
     frmRecUnoListAlfa.free;
  end
  else begin
     Application.CreateForm(TfrmRecUnoList, frmRecUnoList);
     frmRecUnoList.report.preview;
     frmRecUnoList.free;
  end;
end;

procedure TfrmRecUno.qryRecUnoBeforePost(DataSet: TDataSet);
begin
  if qry.fieldByName('codigo').asString <= '' then begin
     abort;
     exit;
  end;

  if not elReceita.Locate('codigo',qryRecUno.fieldByName('elReceita').asString,[]) then begin
     showMessage('Código da Receita Inválido');
     abort;
     exit;
  end;

  with qryRecUno.fieldByName('esfera') do
     if (asString = '10') OR (asString = '20') then
     else begin
       showMessage('Esfera Orçamentária Inválida (10/20)');
       abort;
       exit;
     end;

  with qryRecUno.fieldByName('indUso') do
     if (asString = '') OR (asString < '0') OR (asString > '5') then begin
       showMessage('Indicador de Uso Inválido');
       abort;
       exit;
     end;

  if not qryFonte.Locate('codigo',qryRecUno.fieldByName('fonte').asString,[]) then begin
     showMessage('Código da Fonte Inválido');
     abort;
     exit;
  end;

  try
    if qryRecUno.fieldByName('valor').asFloat < 1 then begin
       showMessage('Valor da Receita Inválido');
       abort;
       exit;
    end;
  except
     showMessage('Valor da Receita Inválido');
     abort;
     exit;
  end;

  qryRecUno.fieldByName('unorc').asString := qry.fieldByName('codigo').asString;
end;

procedure TfrmRecUno.FormShow(Sender: TObject);
begin
   If sQry.State       in [dsinactive] then qry.Open;
   if sQryRecUno.State in [dsinactive] then qryRecUno.Open;   
end;

procedure TfrmRecUno.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   if qryRecUno.State in [dsInsert, dsEdit] then
     if application.messageBox('Você iniciou uma edição no registro atual. Deseja salvar as alterações ?','',MB_ICONQUESTION+MB_YESNO) = IDYES then qryRecUno.post
     else  close;
end;

end.
