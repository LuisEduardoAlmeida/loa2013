unit PesquisaAnaliticaReceita;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics,
  Controls, Forms, Dialogs, StdCtrls, AppEvnts, DB, ADODB, dxCore,
  dxButton, Grids, DBGrids, Buttons, ExtCtrls,Clipbrd;
type
  TfrmPesqAnaliticaReceita=class(TForm)
    edElemento: TEdit;
    Label1: TLabel;
    DBGrid1: TDBGrid;
    edFonte: TEdit;
    edIndUso: TEdit;
    Label3: TLabel;
    Label4: TLabel;
    lbValorElemento: TLabel;
    edUnorc: TEdit;
    Label5: TLabel;
    Bevel1: TBevel;
    Bevel2: TBevel;
    Bevel4: TBevel;
    Shape3: TShape;
    Label2: TLabel;
    btnFechar: TSpeedButton;
    Bevel3: TBevel;
    qyExcl_: TADOQuery;
    dsExcl_: TDataSource;
    qy_: TADOQuery;
    qy_TOTAL_ELEMENTO: TBCDField;
    qyLocalizacao_: TADOQuery;
    qyLocalizacao_Codigo: TAutoIncField;
    qyLocalizacao_locali: TIntegerField;
    qyLocalizacao_elDespesa: TStringField;
    qyLocalizacao_indUso: TStringField;
    qyLocalizacao_fonte: TStringField;
    qyLocalizacao_valor: TBCDField;
    qyExecOrc_: TADOQuery;
    dsExecOrc_: TDataSource;
    qyExcl_Eldespesa: TStringField;
    qyExcl_Fonte: TStringField;
    qyExcl_IU: TStringField;
    qyExcl_Unorc: TStringField;
    qyExcl_Unorcd: TStringField;
    qyExcl_Funcao: TStringField;
    qyExcl_Subfuncao: TStringField;
    qyExcl_Prog: TStringField;
    qyExcl_Acao: TStringField;
    qyExcl_Localis: TStringField;
    qyExcl_locali: TIntegerField;
    qyExcl_Descricao: TStringField;
    qyExcl_Valor: TBCDField;
    Shape1: TShape;
    btPesquisa: TdxButton;
    btRenovar: TdxButton;
    btImprimir: TdxButton;
    dxButton1: TdxButton;
    ApplicationEvents1: TApplicationEvents;
    Label6: TLabel;
    edEsfera: TEdit;
    Label7: TLabel;
    edRecurso: TEdit;
    Label8: TLabel;
    edDescricao: TEdit;
    Label9: TLabel;
    edCat: TEdit;
    Label10: TLabel;
    edGrupo: TEdit;
    Label11: TLabel;
    edSbGrupo: TEdit;
    Label12: TLabel;
    edRubrica: TEdit;
    Label13: TLabel;
    edalinea: TEdit;
    Label14: TLabel;
    edDesdobra: TEdit;
    Shape2: TShape;
    qyExecOrc_unorc: TStringField;
    qyExecOrc_elReceita: TStringField;
    qyExecOrc_receitaD: TStringField;
    qyExecOrc_indUso: TStringField;
    qyExecOrc_fonte: TStringField;
    qyExecOrc_esfera: TStringField;
    qyExecOrc_recurso: TStringField;
    qyExecOrc_cat: TStringField;
    qyExecOrc_grupo: TStringField;
    qyExecOrc_subGrupo: TStringField;
    qyExecOrc_rubrica: TStringField;
    qyExecOrc_alinea: TStringField;
    qyExecOrc_desdobra: TStringField;
    qyExecOrc_valor: TBCDField;
    procedure ApplicationEvents1Message(Sender: TObject);
    procedure btConfirmarClick(Sender: TObject);
    procedure btFecharClick(Sender: TObject);
    procedure btImprimirClick(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
    procedure btPesquisaClick(Sender: TObject);
    procedure btRenovarClick(Sender: TObject);
    procedure dxButton1Click(Sender: TObject);
    procedure edUnorcKeyPress(Sender: TObject; var Key: Char);
    procedure edUnorcKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DBGrid1CellClick(Column: TColumn);
    procedure FullDBGridToClipBoard(DBGrid :TDBGrid; PastHeader :Boolean);
    procedure SelDBGridToClipBoard(DBGrid :TDBGrid; PastHeader :Boolean);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
    Status : String;
    Pesq : String;
    Procedure TotaisElemento();
    Procedure Revona();
  end ;

var
  frmPesqAnaliticaReceita: TfrmPesqAnaliticaReceita;

{This file is generated by DeDe Ver 3.50.04 Copyright (c) 1999-2002 DaFixer}

implementation

uses SelRelatorio, HWarning, RelGerencialRec;

{$R *.DFM}



{ TfrmPesqAnaliticaReceita }

procedure TfrmPesqAnaliticaReceita.ApplicationEvents1Message(
  Sender: TObject);
begin
//
end;

procedure TfrmPesqAnaliticaReceita.btConfirmarClick(Sender: TObject);
begin
//
end;

procedure TfrmPesqAnaliticaReceita.btFecharClick(Sender: TObject);
begin
  //
end;

procedure TfrmPesqAnaliticaReceita.btImprimirClick(Sender: TObject);
begin
    ShowWarning('CARREGANDO LISTAGEM, AGUARDE...');
    Application.CreateForm(TFrmRelGerencialRec, FrmRelGerencialRec);


    with FrmRelGerencialRec.qryEsfera, FrmRelGerencialRec.qryEsfera.SQL do
    begin
        close;
        clear;
        add(' SELECT  unorc,u.descricao as unorcD, elReceita,receitaD = e.descricao,   ');
        add(' r.indUso, r.fonte,esfera, SUM(r.valor) FROM recUno r                     ');
        add(' INNER JOIN elReceita e ON e.codigo = r.elReceita                         ');
        add(' INNER JOIN unorc u ON u.codigo = r.unorc                                  ');
        add(' where 1 =1                                                                ');
        if Trim(edUnorc.Text) <> '' Then
        Begin
            Add(' and unorc = :unorc');// Unorc
            Parameters.ParamByName('unorc').Value := edUnorc.Text;
        End;
        if Trim(edElemento.Text) <> '' Then
        Begin
            Add(' and elReceita ');
            Parameters.ParamByName('elReceita').Value := edElemento.Text;
        end;
        if Trim(edIndUso.Text) <> '' Then
        Begin
            Add('and IndUso = :IndUso');                // Indicador de Uso
            Parameters.ParamByName('IndUso').Value := edIndUso.Text;
        End;
        if Trim(edFonte.Text) <> '' Then
        Begin
            Add('and FONTE = :FONTE');          // Fonte
            Parameters.ParamByName('FONTE').Value := edFonte.Text;
        End;
        if Trim(edEsfera.Text) <> '' Then
        Begin
            Add('and esfera = :esfera');   // esfera
            Parameters.ParamByName('esfera').Value := edEsfera.Text;
        End;
        if Trim(edRecurso.Text) <> '' Then
        Begin
            Add('and SUBSTRING(r.fonte,1,1) = :recurso ');
            Parameters.ParamByName('recurso').value := edRecurso.Text
        end;
        if Trim(edCat.Text) <> '' Then
        Begin
            Add('and SUBSTRING(elReceita,1,1) = :cat');   // esfera
            Parameters.ParamByName('cat').Value := edCat.Text;
        end;
        if Trim(edGrupo.Text) <> '' Then
        Begin
            Add('and SUBSTRING(elReceita,2,1) = :grupo ');
            Parameters.ParamByName('grupo').Value := edGrupo.Text;
        end;
        if Trim(edSbGrupo.Text) <> '' Then
        Begin
            Add('and SUBSTRING(elReceita,3,1) = :subgrupo ');
            Parameters.ParamByName('subgrupo').Value := edSbGrupo.Text;
        end;
        if Trim(edRubrica.Text) <> '' Then
        Begin
            Add('and SUBSTRING(elReceita,4,1) = :rubrica ');
            Parameters.ParamByName('rubrica').Value := edRubrica.Text;
        end;
        if Trim(edalinea.Text) <> '' Then
        Begin
            Add('and SUBSTRING(elReceita,5,2) = :alinea ');
            Parameters.ParamByName('alinea').Value := edalinea.Text;
        end;
        if Trim(edDesdobra.Text) <> '' Then
        Begin
           Add('and SUBSTRING(elReceita,7,2) = :desdobra ');
           Parameters.ParamByName('desdobra').Value := edDesdobra.Text;
        end;
        Add(' Group by  unorc,u.descricao, elReceita,e.descricao,   ');
        add(' r.indUso, r.fonte,esfera                                        ');
        Add(' ORDER BY unorc,elReceita,u.descricao,r.indUso, e.descricao, r.fonte');
        ExecSQL;
        Open;
        HideWarning;
        IF FrmRelGerencialRec.qryEsfera.RecordCount = 0 then
        begin
           ShowMessage('Não ha informação para essa consulta!');
           Exit;
        end else FrmRelGerencialRec.report.Preview;
        FrmRelGerencialRec.Free;
    end;
end;

procedure TfrmPesqAnaliticaReceita.btnFecharClick(Sender: TObject);
begin
   Close;
end;

procedure TfrmPesqAnaliticaReceita.btPesquisaClick(Sender: TObject);
begin
   ShowWarning('CHECANDO BANCO, AGUARDE...');
   qyExecOrc_.Active := False;
   qyExecOrc_.Close;
   qyExecOrc_.SQL.Clear;
   qyExecOrc_.SQL.Add(' SELECT  unorc, elReceita,receitaD = e.descricao,                ');
   qyExecOrc_.SQL.Add(' r.indUso, r.fonte,esfera, recurso = SUBSTRING(r.fonte,1,1),     ');
   qyExecOrc_.SQL.Add(' cat = SUBSTRING(elReceita,1,1),                                 ');
   qyExecOrc_.SQL.Add(' grupo = SUBSTRING(elReceita,2,1), subGrupo = SUBSTRING(elReceita,3,1), rubrica = SUBSTRING(elReceita,4,1), ');
   qyExecOrc_.SQL.Add(' alinea = SUBSTRING(elReceita,5,2), desdobra = SUBSTRING(elReceita,7,2), r.valor FROM recUno r              ');
   qyExecOrc_.SQL.Add(' INNER JOIN elReceita e ON e.codigo = r.elReceita                ');
   qyExecOrc_.SQL.Add(' INNER JOIN unorc u ON u.codigo = r.unorc                        ');
   qyExecOrc_.SQL.Add('where 1=1 ');

   if Trim(edUnorc.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add(' and unorc = :unorc');// Unorc
      qyExecOrc_.Parameters.ParamByName('unorc').Value := edUnorc.Text;

   End;
      if Trim(edElemento.Text) <> '' Then
   Begin
     qyExecOrc_.SQL.Add(' and elReceita = :elReceita');
     qyExecOrc_.Parameters.ParamByName('elReceita').Value := edElemento.Text;
   end;
   if Trim(edIndUso.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and IndUso = :IndUso');                // Indicador de Uso
      qyExecOrc_.Parameters.ParamByName('IndUso').Value := edIndUso.Text;
   End;

   if Trim(edFonte.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and FONTE = :FONTE');          // Fonte
      qyExecOrc_.Parameters.ParamByName('FONTE').Value := edFonte.Text;

   End;
   if Trim(edEsfera.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and esfera = :esfera');   // esfera
      qyExecOrc_.Parameters.ParamByName('esfera').Value := edEsfera.Text;
   End;
   if Trim(edRecurso.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and SUBSTRING(r.fonte,1,1) = :recurso ');
      qyExecOrc_.Parameters.ParamByName('recurso').value := edRecurso.Text
   end;
   if Trim(edCat.Text) <> '' Then
   Begin
     qyExecOrc_.SQL.Add('and SUBSTRING(elReceita,1,1) = :cat');   // esfera
     qyExecOrc_.Parameters.ParamByName('cat').Value := edCat.Text;
   end;
   if Trim(edGrupo.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and SUBSTRING(elReceita,2,1) = :grupo ');
      qyExecOrc_.Parameters.ParamByName('grupo').Value := edGrupo.Text;
   end;
   if Trim(edSbGrupo.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and SUBSTRING(elReceita,3,1) = :subgrupo ');
      qyExecOrc_.Parameters.ParamByName('subgrupo').Value := edSbGrupo.Text;
   end;
   if Trim(edRubrica.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and SUBSTRING(elReceita,4,1) = :rubrica ');
      qyExecOrc_.Parameters.ParamByName('rubrica').Value := edRubrica.Text;
   end;
   if Trim(edalinea.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and SUBSTRING(elReceita,5,2) = :alinea ');
      qyExecOrc_.Parameters.ParamByName('alinea').Value := edalinea.Text;
   end;
   if Trim(edDesdobra.Text) <> '' Then
   Begin
      qyExecOrc_.SQL.Add('and SUBSTRING(elReceita,7,2) = :desdobra ');
      qyExecOrc_.Parameters.ParamByName('desdobra').Value := edDesdobra.Text;
   end;
   qyExecOrc_.SQL.Add(' ORDER BY unorc, elReceita, r.indUso, e.descricao, r.fonte');
   qyExecOrc_.ExecSQL;
   qyExecOrc_.Open;
   If qyExecOrc_.RecordCount > 0 Then
   Begin
       Pesq   := 's';
       Status := 's';
       TotaisElemento;
   End;
   If qyExecOrc_.RecordCount = 0 Then
   Begin
       Pesq   := 'n';
       Status := 'n';
       //TotaisElemento;
   End;
   HideWarning;
end;

procedure TfrmPesqAnaliticaReceita.btRenovarClick(Sender: TObject);
begin
   qyExecOrc_.Active := False;
   Pesq   := 'n';
   Status := 'n';
   edUnorc.Clear;
   edElemento.Clear;
   edDescricao.Clear;
   edIndUso.Clear;
   edFonte.Clear;
   edEsfera.Clear;
   edRecurso.Clear;
   edElemento.Clear;
   edCat.Clear;
   edElemento.Clear;
   edGrupo.Clear;
   edSbGrupo.Clear;
   edRubrica.Clear;
   edalinea.Clear;
   edDesdobra.Clear;

   lbValorElemento.Caption := 'R$ 0,00';
   edElemento.SetFocus;
   HideWarning; 
end;



procedure TfrmPesqAnaliticaReceita.dxButton1Click(Sender: TObject);
begin
   if qyExecOrc_.Active = True then
   begin
       FullDBGridToClipBoard(DBGrid1, True);
       // ou
       SelDBGridToClipBoard(DBGrid1, True);
   end;
end;

procedure TfrmPesqAnaliticaReceita.edUnorcKeyPress(Sender: TObject;
  var Key: Char);
begin
   if not(key in [#8,'0'..'9']) then key :=#0 else if key = #13 then key :=#29;
end;

procedure TfrmPesqAnaliticaReceita.edUnorcKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
   if key = ord(vk_return) then btPesquisa.SetFocus;
   if Key = vk_f8 then
   BEGIN
      ShowWarning('CHECANDO BANCO, AGUARDE...');
      qyExecOrc_.Active := False;
      qyExecOrc_.Close;
      qyExecOrc_.SQL.Clear;
      qyExecOrc_.SQL.Add('SELECT Eldespesa, Fonte, IndUso as IU, Unorc, Unorcd,Funcao,Subfuncao, ');
      qyExecOrc_.SQL.Add('Programa as Prog, Acao, Localis,locali, Descricao, Valor');
      qyExecOrc_.SQL.Add('FROM ORCAMENTO');
      qyExecOrc_.SQL.Add('where codigo is not null');

      if Trim(edUnorc.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add(' and unorc = :unorc');// Unorc
         qyExecOrc_.Parameters.ParamByName('unorc').Value := edUnorc.Text;
      End;
      if Trim(edElemento.Text) <> '' Then
      Begin
        qyExecOrc_.SQL.Add(' and elReceita = :elReceita');
        qyExecOrc_.Parameters.ParamByName('elReceita').Value := edElemento.Text;
      end;
      if Trim(edIndUso.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and IndUso = :IndUso');                // Indicador de Uso
         qyExecOrc_.Parameters.ParamByName('IndUso').Value := edIndUso.Text;
      End;

      if Trim(edFonte.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and FONTE = :FONTE');          // Fonte
         qyExecOrc_.Parameters.ParamByName('FONTE').Value := edFonte.Text;

      End;
      if Trim(edEsfera.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and esfera = :esfera');   // esfera
         qyExecOrc_.Parameters.ParamByName('esfera').Value := edEsfera.Text;
      End;
      if Trim(edRecurso.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and recurso = SUBSTRING(r.fonte,1,1) = :recurso ');
         qyExecOrc_.Parameters.ParamByName('recurso').value := edRecurso.Text
      end;
      if Trim(edCat.Text) <> '' Then
      Begin
        qyExecOrc_.SQL.Add('and cat = SUBSTRING(elReceita,1,1) = :cat');   // esfera
        qyExecOrc_.Parameters.ParamByName('cat').Value := edCat.Text;
      end;
      if Trim(edGrupo.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and Grupo = SUBSTRING(elReceita,2,1) = :grupo ');
         qyExecOrc_.Parameters.ParamByName('grupo').Value := edGrupo.Text;
      end;
      if Trim(edSbGrupo.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and subGrupo = SUBSTRING(elReceita,3,1) = :subgrupo ');
         qyExecOrc_.Parameters.ParamByName('subgrupo').Value := edSbGrupo.Text;
      end;
      if Trim(edRubrica.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and Rubrica = SUBSTRING(elReceita,4,1) = :rubrica ');
         qyExecOrc_.Parameters.ParamByName('rubrica').Value := edRubrica.Text;
      end;
      if Trim(edalinea.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and Alinea = SUBSTRING(elReceita,5,2) = :alinea ');
         qyExecOrc_.Parameters.ParamByName('alinea').Value := edalinea.Text;
      end;
      if Trim(edDesdobra.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and e.Desdobra = SUBSTRING(elReceita,7,2) = :desdobra ');
         qyExecOrc_.Parameters.ParamByName('desdobra').Value := edDesdobra.Text;
      end;
      qyExecOrc_.SQL.Add(' ORDER BY unorc, programa, acao, funcao, subfuncao, localis, ');
      qyExecOrc_.SQL.Add(' descricao, eldespesa, fonte');
      qyExecOrc_.ExecSQL;
      qyExecOrc_.Open;
      qyExecOrc_.Active := True;

      If qyExecOrc_.RecordCount > 0 Then
      Begin
         Pesq   := 's';
         Status := 's';
         TotaisElemento;
      End;

      If qyExecOrc_.RecordCount = 0 Then
      Begin
         Pesq   := 'n';
         Status := 'n';
         //TotaisElemento
      End;
      HideWarning;
   end
end;

procedure TfrmPesqAnaliticaReceita.Revona;
begin
   qyExecOrc_.Close;
   qyExecOrc_.SQL.Clear;
   qyExecOrc_.SQL.Add(' SELECT  unorc, elReceita,receitaD = e.descricao,                                                           ');
   qyExecOrc_.SQL.Add(' r.indUso, r.fonte,esfera, recurso = SUBSTRING(r.fonte,1,1), cat = SUBSTRING(elReceita,1,1),                ');
   qyExecOrc_.SQL.Add(' grupo = SUBSTRING(elReceita,2,1), subGrupo = SUBSTRING(elReceita,3,1), rubrica = SUBSTRING(elReceita,4,1), ');
   qyExecOrc_.SQL.Add(' alinea = SUBSTRING(elReceita,5,2), desdobra = SUBSTRING(elReceita,7,2), r.valor FROM recUno r ');
   qyExecOrc_.SQL.Add(' INNER JOIN elReceita e ON e.codigo = r.elReceita        ');
   qyExecOrc_.SQL.Add(' INNER JOIN unorc u ON u.codigo = r.unorc                ');
   qyExecOrc_.SQL.Add(' ORDER BY unorc, programa, acao, funcao, subfuncao, localis, ');
   qyExecOrc_.SQL.Add(' descricao, eldespesa, fonte ');

   qyExecOrc_.ExecSQL;
   qyExecOrc_.Open;
end;

procedure TfrmPesqAnaliticaReceita.TotaisElemento;
begin
   qy_.Close;
   qy_.SQL.Clear;
   qy_.SQL.Add(' SELECT SUM(VALOR) AS TOTAL_ELEMENTO ');
   qy_.SQL.Add('   FROM recUno r                      ');
   qy_.SQL.Add(' INNER JOIN elReceita e ON e.codigo = r.elReceita');
   qy_.SQL.Add(' INNER JOIN unorc u ON u.codigo = r.unorc         ');
   qy_.SQL.Add(' where 1=1');
   if Trim(edUnorc.Text) <> '' Then
   Begin
      qy_.SQL.Add(' and unorc = :unorc');// Unorc
      qy_.Parameters.ParamByName('unorc').Value := edUnorc.Text;

   End;
      if Trim(edElemento.Text) <> '' Then
   Begin
     qy_.SQL.Add(' and elReceita = :elReceita');
     qy_.Parameters.ParamByName('elReceita').Value := edElemento.Text;
   end;
   if Trim(edIndUso.Text) <> '' Then
   Begin
      qy_.SQL.Add('and IndUso = :IndUso');                // Indicador de Uso
      qy_.Parameters.ParamByName('IndUso').Value := edIndUso.Text;
   End;

   if Trim(edFonte.Text) <> '' Then
   Begin
      qy_.SQL.Add('and FONTE = :FONTE');          // Fonte
      qy_.Parameters.ParamByName('FONTE').Value := edFonte.Text;

   End;
   if Trim(edEsfera.Text) <> '' Then
   Begin
      qy_.SQL.Add('and esfera = :esfera');   // esfera
      qy_.Parameters.ParamByName('esfera').Value := edEsfera.Text;
   End;
   if Trim(edRecurso.Text) <> '' Then
   Begin
      qy_.SQL.Add('and SUBSTRING(r.fonte,1,1) = :recurso ');
      qy_.Parameters.ParamByName('recurso').value := edRecurso.Text
   end;
   if Trim(edCat.Text) <> '' Then
   Begin
     qy_.SQL.Add('and SUBSTRING(elReceita,1,1) = :cat');   // esfera
     qy_.Parameters.ParamByName('cat').Value := edCat.Text;
   end;
   if Trim(edGrupo.Text) <> '' Then
   Begin
      qy_.SQL.Add('and SUBSTRING(elReceita,2,1) = :grupo ');
      qy_.Parameters.ParamByName('grupo').Value := edGrupo.Text;
   end;
   if Trim(edSbGrupo.Text) <> '' Then
   Begin
      qy_.SQL.Add('and SUBSTRING(elReceita,3,1) = :subgrupo ');
      qy_.Parameters.ParamByName('subgrupo').Value := edSbGrupo.Text;
   end;
   if Trim(edRubrica.Text) <> '' Then
   Begin
      qy_.SQL.Add('and SUBSTRING(elReceita,4,1) = :rubrica ');
      qy_.Parameters.ParamByName('rubrica').Value := edRubrica.Text;
   end;
   if Trim(edalinea.Text) <> '' Then
   Begin
      qy_.SQL.Add('and SUBSTRING(elReceita,5,2) = :alinea ');
      qy_.Parameters.ParamByName('alinea').Value := edalinea.Text;
   end;
   if Trim(edDesdobra.Text) <> '' Then
   Begin
      qy_.SQL.Add('and SUBSTRING(elReceita,7,2) = :desdobra ');
      qy_.Parameters.ParamByName('desdobra').Value := edDesdobra.Text;
   end;
   qy_.ExecSQL;
   qy_.Open;;

      lbValorElemento.Font.Color := clRed;
      lbValorElemento.Caption := 'VALOR DA CONSULTA =>  R$ '+FormatCurr('###,###,###0.00',qy_TOTAL_ELEMENTO.Value);
      if qy_TOTAL_ELEMENTO.Value = 0 then lbValorElemento.Caption := 'VALOR DA CONSULTA =>  0,00';

end;

procedure TfrmPesqAnaliticaReceita.DBGrid1CellClick(Column: TColumn);
begin
   DBGrid1.Hint := Column.FieldName;
end;

procedure TfrmPesqAnaliticaReceita.FullDBGridToClipBoard(DBGrid: TDBGrid;
  PastHeader: Boolean);
var
  StrToCopy :string;
  Idx,
  IdxCol :Integer;
  BookMark,
  SavedBookMark :TBookMark;
begin
  StrToCopy := '';
  if PastHeader then// se for para colar o nome das colunas...
  begin
    StrToCopy := DBGrid.Columns[0].Title.Caption;
    for IdxCol := 1 to DBGrid.Columns.Count -1 do
      StrToCopy := format('%s'#9'%s', [StrToCopy, DBGrid.Columns[IdxCol].Title.Caption]);
    StrToCopy := StrToCopy +#13#10;
  end;
  with DBGrid.DataSource.DataSet do  // utilizaremos o dataset do DBGrid - evidente...
  begin
    SavedBookMark := GetBookmark;  // salvamos a posição atual do cursor - linha selecionada no DBGrid
    DisableControls;  // evitamos que a movimentação no dataset provoque o scroll do DBGrid
    First;  // posicionamos no primeiro registro do dataset
    while not EOF do  // varremos todas as linhas no DBGrid
    begin
      StrToCopy := StrToCopy +DBGrid.Columns[0].Field.AsString;
      for IdxCol := 1 to DBGrid.Columns.Count -1 do
        StrToCopy := Format('%s'#9'%s', [StrToCopy, DBGrid.Columns[IdxCol].Field.AsString]);
      StrToCopy := StrToCopy +#13#10;
      Next;  // processando próxima linha...
    end;
    ClipBoard.Clear;  // limpamos o ClipBoard
    ClipBoard.SetTextBuf(PAnsiChar(StrToCopy));  // Copiamos o texto montado para o ClipBoard
    GotoBookMark(SavedBookMark);  // reposicionamos o cursor na linha em que estava antes do processo
    FreeBookMark(SavedBookMark);  // liberamos a memória alocada pelo BookMark
    EnableControls;
  end;
end;

procedure TfrmPesqAnaliticaReceita.SelDBGridToClipBoard(DBGrid: TDBGrid;
  PastHeader: Boolean);
var
  StrToCopy :string;
  Idx,
  IdxCol :Integer;
  BookMark,
  SavedBookMark :TBookMark;
begin
  if DBGrid.SelectedRows.Count = 0 then // só processamos algo se houver linhas selecionadas
    Exit;
  StrToCopy := '';
  if PastHeader then// se for para colar o nome das colunas...
  begin
    StrToCopy := DBGrid.Columns[0].Title.Caption;
    for IdxCol := 1 to DBGrid.Columns.Count -1 do
      StrToCopy := format('%s'#9'%s', [StrToCopy, DBGrid.Columns[IdxCol].Title.Caption]);
    StrToCopy := StrToCopy +#13#10;
  end;
  with DBGrid.DataSource.DataSet do  // utilizaremos o dataset do DBGrid - evidente...
  begin
    SavedBookMark := GetBookmark;  // salvamos a posição atual do cursor - linha selecionada no DBGrid
    DisableControls;  // evitamos que a movimentação no dataset provoque o scroll do DBGrid
    for Idx := 0 to DBGrid.SelectedRows.Count -1 do // percorreremos todas as linhas selecionadas
    begin
      GotoBookMark(Pointer(DBGrid.SelectedRows[Idx])); // posicionando na linha a ser exportada
      StrToCopy := StrToCopy +DBGrid.Columns[0].Field.AsString;
      for IdxCol := 1 to DBGrid.Columns.Count -1 do
        StrToCopy := Format('%s'#9'%s', [StrToCopy, DBGrid.Columns[IdxCol].Field.AsString]);
      StrToCopy := StrToCopy +#13#10;
    end;
    ClipBoard.Clear;  // limpamos o ClipBoard
    ClipBoard.SetTextBuf(PAnsiChar(StrToCopy));  // Copiamos o texto montado para o ClipBoard
    GotoBookMark(SavedBookMark);  // reposicionamos o cursor na linha em que estava antes do processo
    FreeBookMark(SavedBookMark);  // liberamos a memória alocada pelo BookMark
    EnableControls;
  end;

end;

procedure TfrmPesqAnaliticaReceita.FormKeyPress(Sender: TObject;
  var Key: Char);
begin
   if Key = #13 then
   begin
      Perform(WM_NEXTDLGCTL,0,0);
      key :=#0;
   end;
   if Key = #119 then
   BEGIN
       ShowWarning('CHECANDO BANCO, AGUARDE...');
      qyExecOrc_.Active := False;
      qyExecOrc_.Close;
      qyExecOrc_.SQL.Clear;
      qyExecOrc_.SQL.Add('SELECT Eldespesa, Fonte, IndUso as IU, Unorc, Unorcd,Funcao,Subfuncao, ');
      qyExecOrc_.SQL.Add('Programa as Prog, Acao, Localis,locali, Descricao, Valor');
      qyExecOrc_.SQL.Add('FROM ORCAMENTO');
      qyExecOrc_.SQL.Add('where codigo is not null');

      if Trim(edUnorc.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add(' and unorc = :unorc');// Unorc
         qyExecOrc_.Parameters.ParamByName('unorc').Value := edUnorc.Text;
      End;
      if Trim(edElemento.Text) <> '' Then
      Begin
        qyExecOrc_.SQL.Add(' and elReceita = :elReceita');
        qyExecOrc_.Parameters.ParamByName('elReceita').Value := edElemento.Text;
      end;
      if Trim(edIndUso.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and IndUso = :IndUso');                // Indicador de Uso
        qyExecOrc_.Parameters.ParamByName('IndUso').Value := edIndUso.Text;
      End;

      if Trim(edFonte.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and FONTE = :FONTE');          // Fonte
         qyExecOrc_.Parameters.ParamByName('FONTE').Value := edFonte.Text;
      End;
      if Trim(edEsfera.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and esfera = :esfera');   // esfera
         qyExecOrc_.Parameters.ParamByName('esfera').Value := edEsfera.Text;
      End;
      if Trim(edRecurso.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and recurso = SUBSTRING(r.fonte,1,1) = :recurso ');
         qyExecOrc_.Parameters.ParamByName('recurso').value := edRecurso.Text
      end;
      if Trim(edCat.Text) <> '' Then
      Begin
        qyExecOrc_.SQL.Add('and cat = SUBSTRING(elReceita,1,1) = :cat');   // esfera
        qyExecOrc_.Parameters.ParamByName('cat').Value := edCat.Text;
      end;
      if Trim(edGrupo.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and Grupo = SUBSTRING(elReceita,2,1) = :grupo ');
         qyExecOrc_.Parameters.ParamByName('grupo').Value := edGrupo.Text;
      end;
      if Trim(edSbGrupo.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and subGrupo = SUBSTRING(elReceita,3,1) = :subgrupo ');
         qyExecOrc_.Parameters.ParamByName('subgrupo').Value := edSbGrupo.Text;
      end;
      if Trim(edRubrica.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and Rubrica = SUBSTRING(elReceita,4,1) = :rubrica ');
         qyExecOrc_.Parameters.ParamByName('rubrica').Value := edRubrica.Text;
      end;
      if Trim(edalinea.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and Alinea = SUBSTRING(elReceita,5,2) = :alinea ');
         qyExecOrc_.Parameters.ParamByName('alinea').Value := edalinea.Text;
      end;
      if Trim(edDesdobra.Text) <> '' Then
      Begin
         qyExecOrc_.SQL.Add('and e.Desdobra = SUBSTRING(elReceita,7,2) = :desdobra ');
         qyExecOrc_.Parameters.ParamByName('desdobra').Value := edDesdobra.Text;
      end;
      qyExecOrc_.SQL.Add(' ORDER BY unorc, programa, acao, funcao, subfuncao, localis, ');
      qyExecOrc_.SQL.Add(' descricao, eldespesa, fonte');
      qyExecOrc_.ExecSQL;
      qyExecOrc_.Open;
      qyExecOrc_.Active := True;

       If qyExecOrc_.RecordCount > 0 Then
       Begin
          Pesq   := 's';
          Status := 's';
          TotaisElemento;
       End;

       If qyExecOrc_.RecordCount = 0 Then
       Begin
          Pesq   := 'n';
          Status := 'n';
          //TotaisElemento;
       End;
   END;
end;

end.
