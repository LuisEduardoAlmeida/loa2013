p     = Axlsx::Package.new
wb    = p.workbook
q
title         = wb.styles.add_style( b: true, fg_color: "000000", sz: 12, alignment: { horizontal: :center, vertical: :center  },  border:  {:style => :thin, :color => "000000"})
subtitle      = wb.styles.add_style( b: true, bg_color: "CCCCCC", :fg_color=>"#FF000000", sz: 8,  border:  {:style => :thin, :color => "000000"})
itens         = wb.styles.add_style( border: { style: :thin, :color => "000000"} , alignment: { horizontal: :left, vertical: :top, wrap_text: true  }, height: 60, widths: [:auto, :auto, :auto])

Loa.loas_2000.each do |loa|
  wb.add_worksheet(:name => "Controle das Acoes - #{loa.ano}") do |sheet|
    sheet.add_row ["CONTROL DAS AÇÕES CRIADAS POS PPA 2014-2017 - EXECUÇÃO #{loa.ano}"], style: title
    sheet.add_row [""]
    sheet.add_row [""]
    sheet.merge_cells "A1:C3"
    sheet.add_row ["Unorc", "Programa", "Acao"], style: subtitle
    FuncionalProgramaticoLoa.includes(:acao).where.not(acao_id: FuncionalProgramatico.all.map(&:acao).uniq).where(acoes: {ancestry: nil}, loa_id: loa.id).map{|x| {loa: "#{x.loa.ano}", unorc:"#{x.unidade_orcamentaria.codigo_descricao}", programa:"#{x.programa.codigo_descricao}", acao:"#{x.acao.codigo_descricao}"}}.sort_by{|x| "#{x[:unorc]},#{x[:programa]},#{x[:acao]}"}.uniq.each do |fpl|
      sheet.add_row ["#{fpl[:unorc]}","#{fpl[:programa]}", "#{fpl[:acao]}"], style: itens
      sheet.column_widths 60,60,60
    end
  end
end

file = "/tmp/acoes_pos_ppa_2014-2017.xls"
p.serialize(file)
